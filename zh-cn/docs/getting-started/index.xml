<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Crane – 开始使用</title><link>/zh-cn/docs/getting-started/</link><description>Recent content in 开始使用 on Crane</description><generator>Hugo -- gohugo.io</generator><atom:link href="/zh-cn/docs/getting-started/index.xml" rel="self" type="application/rss+xml"/><item><title>Docs: 介绍</title><link>/zh-cn/docs/getting-started/introduction/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/zh-cn/docs/getting-started/introduction/</guid><description>
&lt;h2 id="crane-是什么">Crane 是什么&lt;/h2>
&lt;p>Crane 是一个基于 FinOps 的云资源分析与成本优化平台。它的愿景是在保证客户应用运行质量的前提下实现极致的降本。&lt;/p>
&lt;img alt="fcs logo" height="200" src="/images/Crane-FinOps-Certified-Solution.png" title="FinOps Certified Solution" width="200"/>
&lt;p>Crane 是 &lt;a href="https://www.finops.org/">FinOps 基金会&lt;/a>认证的&lt;a href="https://www.finops.org/members/finops-certified-solution/">云优化方案&lt;/a>。&lt;/p>
&lt;p>&lt;strong>如何在 Crane 中开启成本优化之旅？&lt;/strong>&lt;/p>
&lt;ol>
&lt;li>&lt;strong>成本展示&lt;/strong>: Kubernetes 资源( Deployments, StatefulSets )的多维度聚合与展示。&lt;/li>
&lt;li>&lt;strong>成本分析&lt;/strong>: 周期性的分析集群资源的状态并提供优化建议。&lt;/li>
&lt;li>&lt;strong>成本优化&lt;/strong>: 通过丰富的优化工具更新配置达成降本的目标。&lt;/li>
&lt;/ol>
&lt;iframe src="https://user-images.githubusercontent.com/35299017/186680122-d7756b47-06be-44cb-8553-1957eaa3ed45.mp4"
scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" width="1000" height="600">&lt;/iframe>
&lt;p>Crane Dashboard &lt;strong>在线 Demo&lt;/strong>: &lt;a href="http://dashboard.gocrane.io/">http://dashboard.gocrane.io/&lt;/a>&lt;/p>
&lt;h2 id="main-features">Main Features&lt;/h2>
&lt;p>&lt;img src="/images/crane-overview.png" alt="Crane Overview">&lt;/p>
&lt;p>&lt;strong>成本可视化和优化评估&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>提供一组 Exporter 计算集群云资源的计费和账单数据并存储到你的监控系统，比如 Prometheus。&lt;/li>
&lt;li>多维度的成本洞察，优化评估。通过 &lt;code>Cloud Provider&lt;/code> 支持多云计费。&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>推荐框架&lt;/strong>&lt;/p>
&lt;p>提供了一个可扩展的推荐框架以支持多种云资源的分析，内置了多种推荐器：资源推荐，副本推荐，HPA 推荐，闲置资源推荐。&lt;a href="/zh-cn/docs/tutorials/recommendation">了解更多&lt;/a>。&lt;/p>
&lt;p>&lt;strong>基于预测的水平弹性器&lt;/strong>&lt;/p>
&lt;p>EffectiveHorizontalPodAutoscaler 支持了预测驱动的弹性。它基于社区 HPA 做底层的弹性控制，支持更丰富的弹性触发策略（预测，观测，周期），让弹性更加高效，并保障了服务的质量。&lt;a href="/zh-cn/docs/tutorials/using-effective-hpa-to-scaling-with-effectiveness">了解更多&lt;/a>。&lt;/p>
&lt;p>&lt;strong>负载感知的调度器&lt;/strong>&lt;/p>
&lt;p>动态调度器根据实际的节点利用率构建了一个简单但高效的模型，并过滤掉那些负载高的节点来平衡集群。&lt;a href="/zh-cn/docs/tutorials/scheduling-pods-based-on-actual-node-load">了解更多&lt;/a>。&lt;/p>
&lt;p>&lt;strong>拓扑感知的调度器&lt;/strong>&lt;/p>
&lt;p>Crane Scheduler与Crane Agent配合工作，支持更为精细化的资源拓扑感知调度和多种绑核策略，可解决复杂场景下“吵闹的邻居问题&amp;quot;，使得资源得到更合理高效的利用。&lt;a href="/zh-cn/docs/tutorials/node-resource-tpolology-scheduler-plugins.md">了解更多&lt;/a>。&lt;/p>
&lt;p>&lt;strong>基于 QOS 的混部&lt;/strong>&lt;/p>
&lt;p>QOS相关能力保证了运行在 Kubernetes 上的 Pod 的稳定性。具有多维指标条件下的干扰检测和主动回避能力，支持精确操作和自定义指标接入；具有预测算法增强的弹性资源超卖能力，复用和限制集群内的空闲资源；具备增强的旁路cpuset管理能力，在绑核的同时提升资源利用效率。&lt;a href="/zh-cn/docs/tutorials/using-qos-ensurance">了解更多&lt;/a>。&lt;/p>
&lt;h2 id="架构">架构&lt;/h2>
&lt;p>Crane 的整体架构如下：&lt;/p>
&lt;p>&lt;img src="/images/crane-arch.png" alt="Crane Arch">&lt;/p>
&lt;p>&lt;strong>Craned&lt;/strong>&lt;/p>
&lt;p>Craned 是 Crane 的最核心组件，它管理了 CRDs 的生命周期以及API。Craned 通过 &lt;code>Deployment&lt;/code> 方式部署且由两个容器组成：&lt;/p>
&lt;ul>
&lt;li>Craned: 运行了 Operators 用来管理 CRDs，向 Dashboard 提供了 WebApi，Predictors 提供了 TimeSeries API&lt;/li>
&lt;li>Dashboard: 基于 TDesign&amp;rsquo;s Starter 脚手架研发的前端项目，提供了易于上手的产品功能&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>Fadvisor&lt;/strong>&lt;/p>
&lt;p>Fadvisor 提供一组 Exporter 计算集群云资源的计费和账单数据并存储到你的监控系统，比如 Prometheus。Fadvisor 通过 &lt;code>Cloud Provider&lt;/code> 支持了多云计费的 API。&lt;/p>
&lt;p>&lt;strong>Metric Adapter&lt;/strong>&lt;/p>
&lt;p>Metric Adapter 实现了一个 &lt;code>Custom Metric Apiserver&lt;/code>. Metric Adapter 读取 CRDs 信息并提供基于 &lt;code>Custom/External Metric API&lt;/code> 的 HPA Metric 的数据。&lt;/p>
&lt;p>&lt;strong>Crane Agent&lt;/strong>&lt;/p>
&lt;p>Crane Agent 通过 &lt;code>DaemonSet&lt;/code> 部署在集群的节点上。&lt;/p>
&lt;h2 id="repositories">Repositories&lt;/h2>
&lt;p>Crane is composed of the following components:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://github.com/gocrane/crane/tree/main/cmd/craned">craned&lt;/a> - main crane control plane.&lt;/li>
&lt;li>&lt;a href="https://github.com/gocrane/crane/tree/main/cmd/metric-adapter">metric-adaptor&lt;/a> - Metric server for driving the scaling.&lt;/li>
&lt;li>&lt;a href="https://github.com/gocrane/crane/tree/main/cmd/crane-agent">crane-agent&lt;/a> - Ensure critical workloads SLO based on abnormally detection.&lt;/li>
&lt;li>&lt;a href="https://github.com/gocrane/api">gocrane/api&lt;/a> - This repository defines component-level APIs for the Crane platform.&lt;/li>
&lt;li>&lt;a href="https://github.com/gocrane/fadvisor">gocrane/fadvisor&lt;/a> - Financial advisor which collect resource prices from cloud API.&lt;/li>
&lt;li>&lt;a href="https://github.com/gocrane/crane-scheduler">gocrane/crane-scheduler&lt;/a> - A Kubernetes scheduler which can schedule pod based on actual node load.&lt;/li>
&lt;/ul></description></item><item><title>Docs: 快速开始</title><link>/zh-cn/docs/getting-started/quick-start/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/zh-cn/docs/getting-started/quick-start/</guid><description>
&lt;p>欢迎来到 Crane！在本文档中我们将介绍如何在本地安装 Crane 以及访问 Crane Dashboard：&lt;/p>
&lt;ul>
&lt;li>使用 &lt;a href="https://kind.sigs.k8s.io/">Kind&lt;/a> 安装一个本地运行的 Kubernetes 集群&lt;/li>
&lt;li>使用 &lt;a href="https://helm.sh/">Helm&lt;/a> 安装 Prometheus 和 Grafana&lt;/li>
&lt;li>使用 &lt;a href="https://helm.sh/">Helm&lt;/a> 安装 Crane&lt;/li>
&lt;li>通过 kubectl 的 port-forward 访问 Crane Dashboard&lt;/li>
&lt;/ul>
&lt;p>更多关于安装的介绍请参考 &lt;a href="/zh-cn/docs/getting-started/installation">安装文档&lt;/a> 。&lt;/p>
&lt;h2 id="部署环境要求">部署环境要求&lt;/h2>
&lt;ul>
&lt;li>kubectl&lt;/li>
&lt;li>Kubernetes 1.18+&lt;/li>
&lt;li>Helm 3.1.0&lt;/li>
&lt;li>Kind 0.16+&lt;/li>
&lt;/ul>
&lt;h2 id="安装">安装&lt;/h2>
&lt;p>以下命令将安装 Crane 以及其依赖 (Prometheus/Grafana).&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>curl -sf https://raw.githubusercontent.com/gocrane/crane/main/hack/local-env-setup.sh | sh -
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>确保所有 Pod 都正常运行:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ export KUBECONFIG&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">${&lt;/span>HOME&lt;span style="color:#e6db74">}&lt;/span>/.kube/config_crane
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ kubectl get deploy -n crane-system
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>NAME READY STATUS RESTARTS AGE
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>crane-agent-5r9l2 1/1 Running &lt;span style="color:#ae81ff">0&lt;/span> 4m40s
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>craned-6dcc5c569f-vnfsf 2/2 Running &lt;span style="color:#ae81ff">0&lt;/span> 4m41s
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>fadvisor-5b685f4cd6-xpxzq 1/1 Running &lt;span style="color:#ae81ff">0&lt;/span> 4m37s
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>grafana-64656f6d54-6l24j 1/1 Running &lt;span style="color:#ae81ff">0&lt;/span> 4m46s
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>metric-adapter-967c6d57f-swhfv 1/1 Running &lt;span style="color:#ae81ff">0&lt;/span> 4m41s
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>prometheus-kube-state-metrics-7f9d78cffc-p8l7c 1/1 Running &lt;span style="color:#ae81ff">0&lt;/span> 4m46s
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>prometheus-node-exporter-4wk8b 1/1 Running &lt;span style="color:#ae81ff">0&lt;/span> 4m40s
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>prometheus-server-fb944f4b7-4qqlv 2/2 Running &lt;span style="color:#ae81ff">0&lt;/span> 4m46s
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="访问-crane-dashboard">访问 Crane Dashboard&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>kubectl -n crane-system port-forward service/craned 9090:9090
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>点击 &lt;a href="http://127.0.0.1:9090/">这里&lt;/a> 访问 Crane Dashboard&lt;/p>
&lt;p>&lt;img src="/images/dashboard.png" alt="">&lt;/p></description></item></channel></rss>